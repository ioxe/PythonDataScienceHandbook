user nginx nginx;
worker_processes 1;
error_log /var/log/nginx/error_log debug;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    accept_mutex off;
}

http {
    log_format tcombined '$remote_addr - $upstream_addr [$time_local]  '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$cookie_email" "$cookie_guid" '
                    '$request_time $upstream_response_time';

    # access_log /var/log/nginx/access_log tcombined;
    error_log stderr;

    server {
        listen 80;
        server_name localhost;
        return 302 https://$host$request_uri;
    }

    server {
        listen 443;
        ssl on;
        server_name localhost;
        ssl_certificate /etc/ssl/certs/ssl.crt;
        ssl_certificate_key /etc/ssl/certs/ssl.key;
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        # ssl_dhparam /etc/ssl/certs/dhparam.pem;
        # ssl_trusted_certificate /etc/ssl/certs/alphasslintermediate.pem;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_session_timeout 3d;
        ssl_session_cache shared:SSL:50m;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security max-age=15768000;

        location / {
            error_page 401 = @error401; 
            auth_request /LATEST/auth;
            # auth_request_set $redirect $upstream_http_redirect;
            proxy_pass http://app:8888;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_http_version 1.1;
            proxy_redirect off;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
            # return 302 https://$host$request_uri;
        }

        location /LATEST/auth {
            proxy_pass https://o4dlnokk4h.execute-api.us-west-2.amazonaws.com;
            proxy_pass_request_body off;
        }

        location @error401 {
            return 302 /unauthorized;
        }

        location /unauthorized {
            return 200 'Unauthorized';
            add_header Content-Type text/plain;
        }

    }


    # server {
    #      listen 443;
    #      ssl on;
    #      server_name localhost;
    #      ssl_certificate /etc/ssl/certs/ssl.crt;
    #      ssl_certificate_key /etc/ssl/certs/ssl.key;
    #      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #      ssl_prefer_server_ciphers on;
    #      ssl_dhparam /etc/ssl/certs/dhparam.pem;
    #      ssl_trusted_certificate /etc/ssl/certs/alphasslintermediate.pem;
    #      ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    #      ssl_session_timeout 3d;
    #      ssl_session_cache shared:SSL:50m;
    #      ssl_stapling on;
    #      ssl_stapling_verify on;
    #      add_header Strict-Transport-Security max-age=15768000;

    #      # Hub
    #      location / { 
    #          proxy_pass http://127.0.0.1:8000;
    #          proxy_set_header X-Real-IP $remote_addr;
    #          proxy_set_header Host $host;
    #          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #      }

    #      location ~* /(api/kernels/[^/]+/(channels|iopub|shell|stdin)|terminals/websocket)/? {
    #          proxy_pass http://127.0.0.1:8000;
    #          proxy_set_header X-Real-IP $remote_addr;
    #          proxy_set_header Host $host;
    #          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #          proxy_http_version 1.1;
    #          proxy_set_header Upgrade $http_upgrade;
    #          proxy_set_header Connection "upgrade";
    #      }

    #     # Tensorboard
    #     location = /tensorboard {
    #         return 302 /tensorboard/;
    #     }

    #     location /tensorboard {
    #         rewrite ^/tensorboard(/.*)$ $1 break;
    #         proxy_http_version 1.1;
    #         proxy_pass http://127.0.0.1:6006;
    #     }
        
    #     location ^~ /data {
    #         proxy_http_version 1.1;
    #         proxy_pass http://127.0.0.1:6006;
    #     }

    #      location ~ /.well-known {
    #          allow all;
    #      }
    # }
}